
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
data = pd.read_csv('iris.data') #reading the dataset
data.columns=["petal length","petal width","sapel length","sapel width","species"]   #giving labels to the columns
data.head()     #to get the top 5 rows present in the dataset
data.shape
data.describe()
data.info()
data.isnull().sum() 
sns.pairplot(data) 
plt.figure(figsize=(10,10))                     # size of the resultant figure
sns.heatmap(data.corr(),annot=True,fmt="f")     # data.corr - forcefully converts the 2D array in ndarray which finds the average of the array
                                                # annot means is used to insert text inside the cell 
                                                # fmt =f means this specifies the format of the text that it is of float format
plt.plot()                                      # directly plot the given graph
sns.FacetGrid(data,hue="species").map(plt.scatter,"sapel length","sapel width").add_legend()
plt.show()
sns.FacetGrid(data,hue="species").map(plt.scatter,"petal length","petal width").add_legend()
plt.show()
plt.figure(figsize=(10,8))
plt.subplot(2,2,1)         #subplot(x,y,x) - The first subplot is the first column of the first row, the second subplot is the second column of the first row, and so on. If axes exist in the specified position, then this command makes the axes the current axes.
sns.violinplot(x="species",y="sapel length",data=data)   #violinplot(x,y) - Inputs for plotting long-form data. See examples for interpretation.
plt.subplot(2,2,2)
sns.violinplot(x="species",y="sapel width",data=data)    #violinplot(data)  - Dataset for plotting. If x and y are absent, this is interpreted as wide-form. Otherwise it is expected to be long-form.
plt.subplot(2,2,3)
sns.violinplot(x="species",y="petal length",data=data)
plt.subplot(2,2,4)
sns.violinplot(x="species",y="petal width",data=data)
plt.figure(figsize=(12,10))
plt.subplot(2,2,1)
sns.boxplot(x="species",y="sapel length",data=data)
plt.subplot(2,2,2)
sns.boxplot(x="species",y="sapel width",data=data)
plt.subplot(2,2,3)
sns.boxplot(x="species",y="petal length",data=data)
plt.subplot(2,2,4)
sns.boxplot(x="species",y="petal width",data=data)
